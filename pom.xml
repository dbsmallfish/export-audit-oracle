<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.cninfo</groupId>
	<artifactId>export-audit-oracle</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>export-audit-oracle</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>3.1.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>2.10.1</version>
		</dependency>

		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc14</artifactId>
			<version>10.2.0.3.0</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>3.1.2.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>


		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.5.1</version>
		</dependency>

		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.3</version>


		</dependency>

	<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>



	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/*.properties</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<!-- 这是�?��版本，推荐使用这个版�? -->
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>assemble</id>
						<goals>
							<goal>single</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
				<configuration>
					<appendAssemblyId>false</appendAssemblyId>
					<attach>false</attach>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>env</name>
					<value>dev</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<!-- maven assembly插件�?���?��描述文件 来告诉插件包的结构以及打包所�?��文件来自哪里 -->
							<descriptors>
								<descriptor>${basedir}/src/main/assembly/dev.xml</descriptor>
							</descriptors>
							<finalName>export-audit-oracle</finalName>
							<outputDirectory>${project.parent.build.directory}</outputDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>

		</profile>

		<profile>
			<id>release</id>
			<activation>
				<property>
					<name>env</name>
					<value>release</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<!-- 发布模式使用的maven assembly插件描述文件 -->
							<descriptors>
								<descriptor>${basedir}/src/main/assembly/release.xml</descriptor>
							</descriptors>
							<!-- 如果�?��应用的包含多个deploy模块，如果使用同样的包名�?如果把它们复制的�?��目录中可能会失败，所以包名加�?artifactId以示区分 -->
							<finalName>${project.artifactId}</finalName>
							<!-- scm 要求 release 模式打出的包放到顶级目录下的target子目录中 -->
							<outputDirectory>${project.parent.build.directory}</outputDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- <profile> <id>zip</id> <activation> <property> <name>env</name> <value>zip</value> 
			</property> </activation> <build> <plugins> <plugin> <artifactId>maven-assembly-plugin</artifactId> 
			<configuration> <descriptors> <descriptor>${basedir}/src/main/assembly/zip.xml</descriptor> 
			</descriptors> <finalName>${project.artifactId}</finalName> <outputDirectory>${project.parent.build.directory}</outputDirectory> 
			</configuration> </plugin> </plugins> </build> </profile> -->
		<profile>
			<id>mvn</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>env</name>
					<value>mvn</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-jar-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>**/c3p0.properties</exclude>
								<exclude>**/client.properties</exclude>
							</excludes>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<!-- 发布模式使用的maven assembly插件描述文件 -->
							<descriptors>
								<descriptor>${basedir}/src/main/assembly/mvn.xml</descriptor>
							</descriptors>
							<!-- 如果�?��应用的包含多个deploy模块，如果使用同样的包名�?如果把它们复制的�?��目录中可能会失败，所以包名加�?artifactId以示区分 -->
							<finalName>${project.artifactId}-${project.version}</finalName>
							<!-- scm 要求 release 模式打出的包放到顶级目录下的target子目录中 -->
							<outputDirectory>${project.parent.build.directory}</outputDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


</project>
